# -*- coding: utf-8 -*-
"""linear-regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oNU2pMbH_Ok9Hu-_XIU6ceB0t_55n9Ji
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

combined_data = pd.read_csv('cleaned_data.csv')

combined_data.head()

X = combined_data.iloc[:, :-1]
y = combined_data.iloc[:, -1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=43)

from sklearn.linear_model import LinearRegression
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)

f'Coefficient of determination R^2 on train set {lin_reg.score(X_train, y_train)}'
# must be close to 1, 1 is perfect fit

f'Coefficient of determination R^2 on test set {lin_reg.score(X_test, y_test)}'

lin_reg.coef_

lin_reg.intercept_

from sklearn.model_selection import cross_val_score
score = cross_val_score(lin_reg, X, y, cv = 3)

score.mean()

pd.DataFrame(lin_reg.coef_, X.columns, columns=['Coeff'])

c = 0
for val in lin_reg.coef_:
    effect = 'increase' if val>0 else 'decrease'
    print(f'Holding all other features fixed a 1 unit increase in {X.columns[c]} is associated with {effect} of val in AQI PM2.5')
    c = c+1

pred = lin_reg.predict(X_test)

sns.distplot(y_test - pred)

from sklearn import metrics
print(f"Mean Abs Error: {metrics.mean_absolute_error(y_test, pred)}")
print(f"Mean Sq Error: {metrics.mean_squared_error(y_test, pred)}")
print(f"Root Mean Error: {np.sqrt(metrics.mean_squared_error(y_test, pred))}")

import pickle
pickle.dump(lin_reg, open('linreg.pkl', 'wb'))

