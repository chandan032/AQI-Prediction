# -*- coding: utf-8 -*-
"""svm.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f8Jchd-U5su3r5hJ5tDxhX5doQCk81lV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

combined_data = pd.read_csv('cleaned_data.csv')

combined_data.head()

X = combined_data.iloc[:, :-1]
y = combined_data.iloc[:, -1]

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=43)

"""## SVM"""

from sklearn.svm import SVR
svm = SVR(C = 2.0, epsilon = 0.1, kernel = 'rbf', gamma = 0.5, 
           tol = 0.001, verbose=False, shrinking=True, max_iter = 10000)
regr=svm.fit(X_train, y_train)

f'Coefficient of determination R^2 on train set {regr.score(X_train, y_train)}'
# must be close to 1, 1 is perfect fit

f'Coefficient of determination R^2 on test set {regr.score(X_test, y_test)}'

"""### OVERFIT MODEL"""

from sklearn.model_selection import cross_val_score
score = cross_val_score(regr, X, y, cv = 3)

score.mean()

pred = regr.predict(X_test)

sns.distplot(y_test - pred)

"""#### HYPERPARAMETER TUNING"""

params= {'C': [0.1, 1, 10, 100, 1000],  
              'gamma': [1, 0.1, 0.01, 0.001, 0.0001], 
              'kernel': ['rbf']}

from sklearn.model_selection import GridSearchCV
search = GridSearchCV(svm, params, scoring='neg_mean_squared_error', cv=3,refit = True, verbose = 3)
search.fit(X,y)

search.best_params_

search.best_score_

pred = search.predict(X_test)
sns.distplot(y_test-pred)

from sklearn import metrics
print(f"Mean Abs Error: {metrics.mean_absolute_error(y_test, pred)}")
print(f"Mean Sq Error: {metrics.mean_squared_error(y_test, pred)}")
print(f"Root Mean Error: {np.sqrt(metrics.mean_squared_error(y_test, pred))}")

search.best_estimator_

import pickle
pickle.dump(search, open('svm.pkl', 'wb'))

